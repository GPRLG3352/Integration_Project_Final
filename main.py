def function_that_uses_not_operator():    """    This function is simply to show my understanding of the "NOT" boolean operator. The function asks for a whole    number greater than 0. If the number is greater than 0 than it prints out the number the user gave. If not,    then than it prints a statement to run the program ahead.    """    num_input = int(input("Put in a whole number greater than 0 (Note: this means don't put in any words, letters, "                          "or decimal numbers): "))    if not (num_input > 0):        print(            "You entered the number 0 or a number less than 0. Run the program again and enter a number higher than 0.")    else:        print("This is the number you entered:", num_input)def function_using_shortcut_operators():    """    This function is used to show my understanding of the shortcut operator. This function asks the user to enter a    number. The number input will then be multiplied by 3 and show the product of both numbers.    """    num_input_1 = int(input(        "Enter a whole number to be used with a multiplication shortcut operator (Note: this means don't put in any "        "words or letters): "))    first_entered_num = num_input_1    num_input_1 *= 3    print(first_entered_num, "* 3 =", num_input_1)def function_determines_greater_than_less_than_and_equal_to(x, y):    """    For the following coding examples, I couldn't think of any way of implementing this relational operator This code    basically uses parameters to determine if the two numbers are less tha, greater than, or equal to.    :param x: This parameter is used as a number(X) to compare to another number(Y)    :param y:This parameter is used as a number(Y) to compare to another number(X)    """    if x < y:        print(x, "is less than", y)    elif x > y:        print(x, "is greater than", y)    elif x == y:        print(x, "equals", y)def function_that_solves_small_math_equations():    """    This function just asks the user for two numbers and prints out all the arithmetic problems such as addition,    subtraction, multiplication, etc... The if and elif tell the user the likelihood that the product will be greater    than 100.    """    num1 = int(input("Enter 1st number: "))    num2 = int(input("Enter 2nd number: "))    print(num1, "**", num2, "=", num1 ** num2)    print(num1, "*", num2, "=", num1 * num2)    print(num1, "/", num2, "=", num1 / num2)    print(num1, "//", num2, "=", num1 // num2)    print(num1, "+", num2, "=", num1 + num2)    print(num1, "-", num2, "=", num1 - num2)    print(num1, "%", num2, "=", num1 % num2)    function_determines_greater_than_less_than_and_equal_to(num1, num2)    if num1 < 10 and num2 < 10:        print("Since these numbers are less than 10, the product is going to be less than 100")    elif num1 > 10 or num2 > 10:        print("Since one number or both are greater than 10, than the product might be greater than 100")def function_that_asks_for_game_experience():    """    This function is basically telling the user in a sentence what game they bought, how much it cost, and how long    they've played which the user provides.    """    name_of_game_most_played = input("Enter a game name with the most hours played: ")    total_hours_playing = int(input("Enter the number of hours playing games: "))    cost_of_the_game = int(input("Enter the cost of your game: "))    print("Game Name: ", name_of_game_most_played)    print("Total Amount of Hours Playing Game: ", total_hours_playing)    print("Cost of the Game: ", format(cost_of_the_game, "0.2f"), sep="$")    print("You have spent", cost_of_the_game, "bucks on", name_of_game_most_played, "and have put", total_hours_playing,          "hours playing this game", end=".")def simple_countdown_function():    """    This function basically prints all the numbers counting downward except the number the user provides    """    input_countdown_number = int(input("Enter a countdown number greater than 0 (Note: this means don't enter a "                                       "number less than 0): "))    if input_countdown_number > 0:        while input_countdown_number != 0:            for x in range(input_countdown_number):                input_countdown_number -= 1                print(input_countdown_number)    else:        print("Error, Run Again")def fav_shows_function(show1, show2):    """    This function uses parameters (show1 and show2) and prints out the users favorite shows which the user provides    :param show1: This parameter will be used as an argument and will basically be shown as the users favorite shows.    :param show2: This parameter will also be used as an argument and will basically be shown as the users favorite    shows.    """    print(show1, "and", show2, "are your favorite shows.")def fav_games_function(game1, game2):    """    This function uses parameters (game1 and game2) and prints out the users favorite games which the user provides    :param game1: The game1 parameter is used in a statement below as an argument and shows the users favorite game    they entered.    :param game2: The game2 parameter is used in a statement below as an argument and shows the users    other favorite game they entered.    """    print(game1, "and", game2, "are your favorite games to play.")# This function uses arguments (arguments being favorite_show_1, favorite_show_2, fav_game1, and fav_game2) and prints# the user favorite shows and gamesdef function_that_uses_fav_game_and_show():    """    This function uses arguments (arguments being favorite_show_1, favorite_show_2, fav_game1, and fav_game2) and prints    the user favorite shows and games that the user entered.    """    favorite_show_1 = input("Enter one of your favorite shows (Note: Don't enter a number): ")    favorite_show_2 = input("Enter another one of your favorite shows (Note: Don't enter a number): ")    fav_game1 = input("Enter one of your favorite games to play (Note: Don't enter a number): ")    fav_game2 = input("Enter another one of your favorite games to play (Note: Don't enter a number): ")    fav_shows_function(favorite_show_1, favorite_show_2)    fav_games_function(fav_game1, fav_game2)def main():    """    This function is used to run all the functions that asks the user for something and do something with the given    information.    """    function_that_uses_not_operator()    function_using_shortcut_operators()    function_that_solves_small_math_equations()    function_that_asks_for_game_experience()    simple_countdown_function()    function_that_uses_fav_game_and_show()main()